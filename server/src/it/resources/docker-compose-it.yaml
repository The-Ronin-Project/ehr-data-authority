services:
  ehr-data-authority:
    restart: on-failure
    build:
      context: ../../..
      dockerfile: Dockerfile
    image: ehr-data-authority:local
    ports:
      - "8080:8080"
    environment:
      AIDBOX_URL: "http://devbox:8888"
      AIDBOX_CLIENT_ID: "client"
      AIDBOX_CLIENT_SECRET: "secret"
      SPRING_DATASOURCE_URL: "jdbc:mysql://springuser:ThePassword@ehr-data-authority-db:3306/dataauthority-db"
      AUTH0_AUDIENCE: "https://ehr.dev.projectronin.io"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: "http://mock-oauth2:8080/ehr"
      KAFKA_CLOUD_VENDOR: "oci"
      KAFKA_CLOUD_REGION: "us-phoenix-1"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:19092"
      KAFKA_PUBLISH_SOURCE: "ehr-data-authority-it"
      KAFKA_RETRIEVE_GROUPID: "ehr-data-authority-it"
      KAFKA_RETRIEVE_SERVICEID: "ehr-data-authority"
      KAFKA_PROPERTIES_SECURITY_PROTOCOL: "PLAINTEXT"
      KAFKA_PROPERTIES_SASL_MECHANISM: "GSSAPI"
      KAFKA_PROPERTIES_SASL_JAAS: "nothing"
    depends_on:
      devbox:
        condition: service_healthy
      ehr-data-authority-db:
        condition: service_healthy
      kafka:
        condition: service_started

  ehr-data-authority-db:
    restart: always
    image: mysql/mysql-server:latest
    environment:
      - MYSQL_DATABASE=dataauthority-db
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_USER=springuser
      - MYSQL_PASSWORD=ThePassword
    ports:
      - "3306:3306"
    expose:
      - 3306
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "springuser", "-pThePassword" ]
      timeout: 5s
      retries: 3

  devbox:
    image: healthsamurai/devbox:2206-lts
    depends_on:
      devbox-db:
        condition: service_healthy
    links:
      - "devbox-db:database"
    ports:
      - "8888:8888"
    environment:
      - AIDBOX_LICENSE_ID
      - AIDBOX_LICENSE_KEY
      - AIDBOX_PORT
      - AIDBOX_CLIENT_ID
      - AIDBOX_ADMIN_ID
      - AIDBOX_ADMIN_PASSWORD
      - AIDBOX_CLIENT_SECRET
      - PGPORT
      - PGHOSTPORT
      - AIDBOX_FHIR_VERSION
      - PGHOST
      - PGUSER
      - PGPASSWORD
      - PGDATABASE
      - box_features_validation_skip_reference
    volumes:
      - ./config:/var/config
      - ./data:/data # Avoid collision with "data" folder used by devbox-db and mirth-db
    healthcheck:
      test: [ "CMD-SHELL", "curl -f -s -S -I -X GET http://localhost:8888/fhir/metadata || exit 1" ]
      timeout: 5s
      retries: 10

  devbox-db:
    image: healthsamurai/aidboxdb:13.2
    platform: linux/amd64
    ports:
      - "5437:5432"
    environment:
      - PGPORT
      - PGHOSTPORT
      - PGHOST
      - PGUSER
      - PGPASSWORD
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - PGDATABASE
      - box_features_validation_skip_reference
    volumes:
      - ./data-dbpg:/data # Avoid collision with "data" folder used by devbox and mirth-db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h localhost -p 5432 -d devbox" ]
      interval: 35s
      timeout: 5s
      retries: 10

  mock-oauth2:
    image: ghcr.io/navikt/mock-oauth2-server:0.5.4
    ports:
      - "8081:8080"
    volumes:
      - ./:/host
    environment:
      - JSON_CONFIG_PATH=/host/mock-oauth2-config.json

  zookeeper:
    image: docker-proxy.devops.projectronin.io/zookeeper
    ports:
      - "2181:2181"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=zookeeper

  kafka:
    image: docker-proxy.devops.projectronin.io/wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: >-
        LISTENER_DOCKER_INTERNAL://kafka:19092,
        LISTENER_DOCKER_EXTERNAL://127.0.0.1:9092
      KAFKA_LISTENERS: >-
        LISTENER_DOCKER_INTERNAL://:19092,
        LISTENER_DOCKER_EXTERNAL://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: >-
        LISTENER_DOCKER_INTERNAL:PLAINTEXT,
        LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
    depends_on:
      zookeeper:
        condition: service_started

  # available at http://localhost:8090. Can view topics and messages
  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:19092
    depends_on:
      kafka:
        condition: service_started
