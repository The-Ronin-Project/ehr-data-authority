services:
  ehr-data-authority:
    restart: on-failure
    build: ../../..
    image: ehr-data-authority:local
    ports:
      - "8080:8080"
    environment:
      - AIDBOX_URL=http://devbox:8888
      - AIDBOX_CLIENT_ID=client
      - AIDBOX_CLIENT_SECRET=secret
      - SPRING_DATASOURCE_URL=jdbc:mysql://springuser:ThePassword@mysql-server:3306/dataauthority-db
      - AUTH0_AUDIENCE=https://ehr.dev.projectronin.io
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://mock-oauth2:8080/ehr
      - KAFKA_CLOUD_VENDOR=oci
      - KAFKA_CLOUD_REGION=us-phoenix-1
      - KAFKA_BOOTSTRAP_SERVERS=kafka:19092
      - KAFKA_PUBLISH_SOURCE=ehr-data-authority-it
      - KAFKA_RETRIEVE_GROUP_ID=ehr-data-authority-it
      - KAFKA_RETRIEVE_SERVICE_ID=ehr-data-authority
      - KAFKA_PROPERTIES_SECURITY_PROTOCOL=PLAINTEXT
      - KAFKA_PROPERTIES_SASL_MECHANISM=GSSAPI
      - KAFKA_PROPERTIES_SASL_JAAS=nothing
      - VALIDATION_SERVER_URL=http://validation-server:8080
      - VALIDATION_AUTH_TOKEN_URL=http://mock-oauth2:8080/validation/token
      - VALIDATION_AUTH_AUDIENCE=https://interop-validation.dev.projectronin.io
      - VALIDATION_AUTH_CLIENT_ID=validation-client
      - VALIDATION_AUTH_CLIENT_SECRET=client-secret
      - VALIDATION_AUTH_AUTH0=false
      - OCI_CONCEPTMAP_BUCKET_NAME=infx-shared
      - OCI_FINGERPRINT=fingerprint
      - OCI_NAMESPACE=namespace
      - OCI_PRIVATE_KEY_BASE64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdnBuYVBLTElLZHZ4OThLVzY4bHo4cEdhUlJjWWVyc05HcVBqcGlmTVZqakU4THVDCm9YZ1BVMEhlUG5OVFVqcFNoQm55bktDdnJ0V2hOK2hhS2JTcCtRV1hTeGlUclc5OUhCZkFsMU1EUXlXY3Vrb0UKYjlDdzZJTmN0VlVONGlSdmtuOVQ4RTZxMTc0UmJjbndBLzd5VGM3cDFOQ3Z3KzZCL2FBTjlsMUcycFFYZ1JkWQpDLytHNm8xSVpFSHRXaHF6RTk3blk1UUtOdVVWRDBWMDlkYzVDRFlCYUtqcWV0d3d2NkRGay9HUmRPU0VkLzZiClcrMjB6MHFTSHBhM1lOVzZxU3AreDVweVltRHJ6UklSMDNvczZEYXVaa0NoU1J5Yy9XaHZ1cng2bzg1RDZxcHoKeXdvOHh3TmFMWkh4VFFQZ2NJQTVzdTlaSXl0djlMSDJFK2xTd3dJREFRQUJBb0lCQUZtbDhjRDlhNXBNcWxXMwpmOWJ0VFF6MXNSTDRGdnA3Q21IU1hodmpzamVId2hIY2tFZTBPYmtXVFJzZ2tUc20xWEx1NVc4SUlUbmhuMCsxCmlOcis3OGVCK3JSR25nZEFYaDhkaU9ka0V5KzgvQ2VlOHRGSTNqeXV0S2RSbHhNYndpS3NvdVZ2aXVtb3EzZngKT0dRWXdRMFoybC9QdkN3eS9ZODJmZnEzeXNDNWdBSnNiQllzQ3JnMTRiUW80NHVsckVMZTRTRFdzNUhDaktZYgpFSTJiOGNPTXVjcVpTT3R4ZzluaUxOL2plMmJvL0kySEdTYXdpYmdjT2RCbXM4azZUdnNTclpNcjNrSjVPNkorCjc3TEd3S0gzN2JyVmdiVll2YnE2bldQTDB4TEc3ZFV2KzdMV0VvNXFRYVB5NmFYYi96YmNrcUxxdTYvRWpPVmUKeWRHNUpRRUNnWUVBOWtLZlRaRC9XRVZBcmVBMGR6ZmVKUnU4dmxud29hZ0w3Y0phb0R4cVhvczRtY3I1bVBEVAprYldnRmtMRkZIL0F5VW5QQmxLNkJjSnAxWEs2N0IxM0VUVWEzaTlRNXQxV3VaRW9iaUtLQkxGbTlERFFKdDQzCnVLWldKeEJLRkdTdkZyWVB0R1pzdDcxOW1aVmNQY3QyQ3pQakVnTjNIbHB0NmZ5dzNlT3Jub0VDZ1lFQXhpT3UKandYQ09tdUdhQjcrT1cydFIwUEdFemJ2VmxFR2RrQUo2VEMvSG9LTTFBOHIydTRoTFRFSkpDckxMVGZ3Kys0SQpkZEhFMmRMZVI0UTdPNThTZkxwaHdnUG1MRGV6TjdXUkxHcjdWeWZ1djdWbWFIakd1QzNHdjlhZ25oV0RsQTJRCmdCRzkvUjlvVmZMMERjN0NnSmdMZVV0SXRDWUMzMWJHVDN5aFYwTUNnWUVBNGszREc0TCtSTjRQWERwSHZLOUkKcEExalhBSkhFaWZlSG5hVzFkM3ZXa2JTa3ZKbWdWZis5VTVWZVYrT3dSSE4xcXpQWlY0c3VSSTZNLzhsSzhyQQpHcjRVbk00YXFLNEsvcWtZNEcwNUxLcmlrOUV2MkNncVNMUURSQTdDSlErSm4zTmI1MHFnNmhGbkZQYWZOK0o3CjdqdVdsbjA4d0ZZVjRBdHBkZCs5WFFFQ2dZQnhpemtaRkwrOUlxa2ZPY09OdldBekdvK0RxMU4wTDNKNGlUSWsKdzU2Q0tXWHlqODhkNHFCNGVVVTN5SjR1QjRTOW1pYVcvZUxFd0taSWJXcFVQRkFuMGRiN2k2aDNabVA1Wkw4UQpxUzNuUUNiOURVTG1VMi90VTY0MWVSVUtBbUlva2ExZzlzbmRLQVp1V28rbzZmZGtJYjFSZ09iazlYTm44UjRyCnBzdithUUtCZ0IrQ0ljRXhSMzB2eWN2NWJuWk45RUZsSVhOS2FlTUpVcllDWGNSUU52cm5VSVVCdkFPOCtqQWUKQ2RMeWdTNVJ0Z09MWmliMElWRXJxV3NQM0VJMUFDR3VMdHMwdlE5R0ZMUUdhTjFTYU1TNDBDOWt2bnMxbWxEdQpMaEloWXBKOFVzQ1Z0NXNuV28yTitNKzZBTmg1dHBXZFFuRUs2eklMaDR0UmJ1emFpSGdiCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
      - OCI_PUBLISH_BUCKET_NAME=publish-bucket
      - OCI_REGION=us-phoenix-1
      - OCI_TENANCY_OCID=ocid.tenancy
      - OCI_USER_OCID=userid
      - OCI_INFX_REGISTRY_FILE=TheDataNormalizationRegistry.json
      - LOGGING_LEVEL_IO_KTOR=DEBUG
    healthcheck:
      test: [ "CMD", "curl", "-k", "-X", "GET", "localhost:8080/actuator/health" ]
      timeout: 5s
      retries: 30
    depends_on:
      devbox:
        condition: service_healthy
      mysql-server:
        condition: service_healthy
      validation-server:
        condition: service_started
      kafka:
        condition: service_started

  mysql-server:
    restart: always
    image: mysql/mysql-server:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3306:3306"
    expose:
      - 3306
    volumes:
      - ../../../build/resources/it/db:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "springuser", "-pThePassword" ]
      timeout: 5s
      retries: 3

  devbox:
    image: healthsamurai/devbox:2206-lts
    depends_on:
      devbox-db:
        condition: service_healthy
    links:
      - "devbox-db:database"
    ports:
      - "8888:8888"
    environment:
      - AIDBOX_LICENSE_ID
      - AIDBOX_LICENSE_KEY
      - AIDBOX_PORT=8888
      - AIDBOX_CLIENT_ID=client
      - AIDBOX_ADMIN_ID=admin
      - AIDBOX_ADMIN_PASSWORD=secret
      - AIDBOX_CLIENT_SECRET=secret
      - PGPORT=5432
      - PGHOSTPORT=5437
      - AIDBOX_FHIR_VERSION=4.0.0
      - PGHOST=database
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - PGDATABASE=devbox
      - box_features_validation_skip_reference=true
    volumes:
      - ../../../build/resources/it/config:/var/config
      - ../../../build/resources/it/data:/data # Avoid collision with "data" folder used by devbox-db and mirth-db
    healthcheck:
      test: [ "CMD-SHELL", "curl -f -s -S -I -X GET http://localhost:8888/fhir/metadata || exit 1" ]
      timeout: 5s
      retries: 10

  devbox-db:
    image: healthsamurai/aidboxdb:13.2
    platform: linux/amd64
    ports:
      - "5437:5432"
    environment:
      - PGPORT=5432
      - PGHOSTPORT=5437
      - PGHOST=database
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=devbox
      - PGDATABASE=devbox
    volumes:
      - ../../../build/resources/it/data-dbpg:/data # Avoid collision with "data" folder used by devbox and mirth-db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h localhost -p 5432 -d devbox" ]
      interval: 35s
      timeout: 5s
      retries: 10

  validation-server:
    restart: on-failure
    image: docker-proxy.devops.projectronin.io/interop-validation:latest
    environment:
      SPRING_DATASOURCE_URL: "jdbc:mysql://validationuser:ThePassword@mysql-server:3306/validation-db"
      AUTH0_AUDIENCE: "https://interop-validation.dev.projectronin.io"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: "http://mock-oauth2:8080/validation"
      KAFKA_CLOUD_VENDOR: "oci"
      KAFKA_CLOUD_REGION: "us-phoenix-1"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:19092"
      KAFKA_PUBLISH_SOURCE: "ehr-data-authority-it"
      KAFKA_RETRIEVE_GROUP_ID: "ehr-data-authority-it"
      KAFKA_RETRIEVE_SERVICE_ID: "interop-validation"
      KAFKA_PROPERTIES_SECURITY_PROTOCOL: "PLAINTEXT"
      KAFKA_PROPERTIES_SASL_MECHANISM: "GSSAPI"
      KAFKA_PROPERTIES_SASL_JAAS: "nothing"
    ports:
      - "8082:8080"
    depends_on:
      mock-oauth2:
        condition: service_started
      mysql-server:
        condition: service_healthy

  mock-oauth2:
    image: ghcr.io/navikt/mock-oauth2-server:0.5.4
    ports:
      - "8081:8080"
    volumes:
      - ../../../build/resources/it:/host
    environment:
      - JSON_CONFIG_PATH=/host/mock-oauth2-config.json

  zookeeper:
    image: docker-proxy.devops.projectronin.io/zookeeper
    ports:
      - "2181:2181"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=zookeeper

  kafka:
    image: docker-proxy.devops.projectronin.io/wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: >-
        LISTENER_DOCKER_INTERNAL://kafka:19092,
        LISTENER_DOCKER_EXTERNAL://127.0.0.1:9092
      KAFKA_LISTENERS: >-
        LISTENER_DOCKER_INTERNAL://:19092,
        LISTENER_DOCKER_EXTERNAL://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: >-
        LISTENER_DOCKER_INTERNAL:PLAINTEXT,
        LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
    depends_on:
      zookeeper:
        condition: service_started

  # available at http://localhost:8090. Can view topics and messages
  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:19092
    depends_on:
      kafka:
        condition: service_started

  mock-server:
    platform: linux/amd64
    image: "docker-proxy.devops.projectronin.io/mockserver/mockserver:latest"
    volumes:
      - "../../../build/resources/it/mock-oci/config/mockserver.properties:/config/mockserver.properties"
      - "../../../build/resources/it/mock-oci/expectations:/expectations"
    ports:
      - 1081:443
    networks:
      default:
        aliases:
          - oraclecloud.com
          - objectstorage.us-phoenix-1.oraclecloud.com
          - dev.projectronin.io
